name: Публикация в PyPI

on:
  push:
    tags:
      - '*'
  workflow_dispatch:
    inputs:
      tag:
        description: 'Тег для сборки (должен быть в формате x.x.x.x...)'
        required: true

jobs:
  validate-tag:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.validate.outputs.version }}
      should-create-release: ${{ steps.validate.outputs.should-create-release }}
    steps:
      - name: Получить версию из тега
        id: validate
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            TAG="${{ github.event.inputs.tag }}"
          else
            TAG="${GITHUB_REF#refs/tags/}"
          fi

          # Проверяем формат версии (x.x.x.x...)
          if [[ ! "$TAG" =~ ^[0-9]+(\.[0-9]+)+$ ]]; then
            echo "::error::Тег должен быть в формате x.x.x.x..."
            exit 1
          fi

          # Считаем количество сегментов
          SEGMENTS=$(echo "$TAG" | tr '.' '\n' | wc -l)
          
          # Создаем релиз только если сегментов не больше 3
          if [ "$SEGMENTS" -le 3 ]; then
            echo "should-create-release=true" >> $GITHUB_OUTPUT
          else
            echo "should-create-release=false" >> $GITHUB_OUTPUT
          fi

          echo "version=$TAG" >> $GITHUB_OUTPUT

  publish:
    runs-on: ubuntu-latest
    needs: validate-tag
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ needs.validate-tag.outputs.version }}

      - name: Настройка Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - name: Установка зависимостей
        run: pip install build

      - name: Сборка пакета
        run: python -m build

      - name: Публикация в PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}

  create-release:
    runs-on: ubuntu-latest
    needs: validate-tag
    if: ${{ needs.validate-tag.outputs.should-create-release == 'true' }}
    steps:
      - name: Создание релиза
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ needs.validate-tag.outputs.version }}
          name: Release ${{ needs.validate-tag.outputs.version }}
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}